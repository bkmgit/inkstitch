{% assign fonts = site.fonts | where: "lang", page.lang %}

<input type="checkbox" name="font-display-size" id="font-display-size" checked> <label for="font-display-size" style="display:inline;">{{ site.data.ui-text[page.lang].font_filter_font_display_size_label | default: "Display fonts in size comparison" }}</label>

<button id="toggle-font-filter">ðŸ”§ {{ site.data.ui-text[page.lang].font_filter_label | default: "Font Filter" }}</button>
<form id="font-filter" style="display:none;">
  <label for="size-filter">{{ site.data.ui-text[page.lang].font_filter_size_label | default: "Size (height in mm)" }}</label>
  <input type="number" step="0.5" min="0" id="size-filter" name="size-filter">
  <label for="style-filter">{{ site.data.ui-text[page.lang].font_filter_category_label | default: "Category" }}</label>
  <select name="style-filter" id="style-filter" size="14" multiple>
    <option></option>
    <option value="applique">{{ site.data.ui-text[page.lang].font_filter_category_applique | default: "Applique" }}</option>
    <option value="crossstitch">{{ site.data.ui-text[page.lang].font_filter_category_crossstitch | default: "Crossstitch" }}</option>
    <option value="display">{{ site.data.ui-text[page.lang].font_filter_category_display | default: "Display" }}</option>
    <option value="handwriting">{{ site.data.ui-text[page.lang].font_filter_category_handwriting | default: "Handwriting" }}</option>
    <option value="italic">{{ site.data.ui-text[page.lang].font_filter_category_italic | default: "Italic" }}</option>
    <option value="monogram">{{ site.data.ui-text[page.lang].font_filter_category_monogram | default: "Monogram" }}</option>
    <option value="multicolor">{{ site.data.ui-text[page.lang].font_filter_category_multicolor | default: "Multicolor" }}</option>
    <option value="ripple">{{ site.data.ui-text[page.lang].font_filter_category_ripple | default: "Ripple Stitch" }}</option>
    <option value="running_stitch">{{ site.data.ui-text[page.lang].font_filter_category_running | default: "Running Stitch" }}</option>
    <option value="sans_serif">{{ site.data.ui-text[page.lang].font_filter_category_sans_serif | default: "Sans Serif }}</option>
    <option value="serif">{{ site.data.ui-text[page.lang].font_filter_category_serif | default: "Serif" }}</option>
    <option value="tartan">{{ site.data.ui-text[page.lang].font_filter_category_tartan | default: "Tartan" }}</option>
    <option value="tiny">{{ site.data.ui-text[page.lang].font_filter_category_tiny | default: "Tiny" }}</option>
  </select>
  <label for="glyph-filter">{{ site.data.ui-text[page.lang].font_filter_glyph_label | default: "Glyphs" }}</label>
  <input type="text" id="glyph-filter" name="glyph-filter">
  <p class="font-counter"><span id="font-counter"></span> {{ site.data.ui-text[page.lang].font_filter_counter_label | default: "fonts" }}</p>
</form>

{%- for font in fonts -%}
{%- assign min_size = 99999999 -%}
{%- assign max_size = 0 -%}
{%- assign categories = "" | split: ',' -%}
{%- assign glyphs = "" | split: ',' -%}
{%- for sub_font in font.data_title -%}
  {%- assign sub_font_data = site.data.fonts[sub_font].font -%}
  {%- assign categories = categories | push: sub_font_data.keywords -%}
  {%- assign glyphs = glyphs | push: sub_font_data.glyphs -%}
  {%- assign min_scale = sub_font_data.min_scale | times: sub_font_data.size -%}
  {%- assign max_scale = sub_font_data.max_scale | times: sub_font_data.size -%}
  {%- if min_scale < min_size -%}
      {%- assign min_size = min_scale -%}
  {%- endif -%}
  {%- if max_scale > max_size -%}
      {%- assign max_size = max_scale -%}
  {%- endif -%}
{% endfor %}

<div class="font-separator" data-max_size="{{ max_size }}" data-min_size="{{ min_size }}" data-keywords="{{ categories | uniq | join: ',' }}" data-glyphs="{{ glyphs | uniq | join: ' ' | escape}}">
  {%- for image in font.preview_image -%}
  {%- assign urlsize = image.url | size -%}
  {%- if urlsize < 15 -%}
  <p><a href="{{ font.permalink }}"><img src="{{ font.preview_image }}" alt="{{font.title}} Preview"></a></p>
  {%- else -%}
  <p>
      <a href="{{ font.permalink }}"><img src="{{ image.url }}" alt="{{font.title}} Preview" style="height:{{ image.height }}mm" data-image_height="{{ image.height }}mm"></a>
  </p>
  {%- endif -%}
  {% endfor %}
  <p><a href="{{ font.permalink }}">{{ font.title }}</a></p>
</div>
{% endfor %}

<script>
var fontDisplaySize = document.getElementById('font-display-size')
var fontFilterForm = document.getElementById('font-filter');
var sizeFilter = document.getElementById("size-filter");
var categoryFilter = document.getElementById("style-filter");
var glyphFilter = document.getElementById("glyph-filter");

fontFilterForm.addEventListener('submit', function(event) {
    event.preventDefault();
    updateFontList();
    return true;
}, false);

document.getElementById('toggle-font-filter').addEventListener('click', toggleFilterForm);
sizeFilter.addEventListener('change', updateFontList);
categoryFilter.addEventListener('change', updateFontList);
glyphFilter.addEventListener('change', updateFontList);
document.addEventListener("DOMContentLoaded", updateFontList);

function toggleFilterForm() {
if (fontFilterForm.style.display === "none") {
    fontFilterForm.style.display = "block";
  } else {
    fontFilterForm.style.display = "none";
  }
}

function updateFontList(){
  let font_data = document.querySelectorAll('[data-max_size]');
  for (var font of font_data) {
    let max_size = parseFloat(font.getAttribute('data-max_size'));
    let min_size = parseFloat(font.getAttribute('data-min_size'));

    let keywords = font.getAttribute('data-keywords').split(",");
    let selectedCategories = categoryFilter.selectedOptions;
    selectedCategories = Array.from(selectedCategories).map(({ value }) => value);
    selectedCategories = selectedCategories.filter(n => n);
    let activeKeys = keywords.filter(key => selectedCategories.includes(key));

    let glyphs = font.getAttribute('data-glyphs').split(" ");
    let selectedGlyphs = Array.from(new Set(glyphFilter.value.replace(/\s/g, "").split("")));

    if ((sizeFilter.value && (max_size < sizeFilter.value || min_size > sizeFilter.value)) ||
        (selectedCategories.length > 0 && activeKeys.length == 0) ||
        (selectedGlyphs.length > 0 && !selectedGlyphs.every(glyph => glyphs.includes(glyph)))
       ) {
      font.style.display = 'none';
    } else {
      font.style.display = 'block';
    }
  }
  let countVisible = document.querySelectorAll(".font-separator:not([style='display: none;'])").length;
  document.getElementById('font-counter').innerHTML = countVisible

  fontDisplaySize.addEventListener('change', updateFontDisplaySize);
  function updateFontDisplaySize() {
      let font_images = document.querySelectorAll('div.font-separator img');
      for (var image of font_images) {
          if (fontDisplaySize.checked) {
            image.style.height = image.getAttribute('data-image_height');
          } else {
            image.style.height = '5em';
          }
      }
  }
}
</script>
<noscript>
  Font filters deactivated. There is no JavaScript available.
</noscript>
